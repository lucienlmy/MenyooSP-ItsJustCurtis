name: EnhancedFreecam_Build

on:
  push:
    branches: [ "EnhancedFreecam-joy" ]

env:
  SOLUTION_FILE_PATH: ./Solution/Menyoo.sln
  BUILD_CONFIGURATION: Release
  CANCELJOB: false

permissions:
  contents: write
  pull-requests: write

jobs:
  check-version-and-merge:
    runs-on: ubuntu-latest
    outputs:
      CANCELJOB: ${{ steps.set_output.outputs.CANCELJOB }}
      VERSION: ${{ steps.set_final_version.outputs.version }}

    steps:
      # ... (保持之前的check-version-and-merge作业内容不变) ...

  build:
    if: github.ref == 'refs/heads/EnhancedFreecam-joy' && needs.check-version-and-merge.outputs.CANCELJOB != 'true'
    runs-on: windows-latest
    needs: check-version-and-merge
    outputs:
      ARTIFACT_NAME: ${{ steps.set_artifact_name.outputs.name }}  # 新增输出

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set artifact name
        id: set_artifact_name
        run: |
          ARTIFACT_NAME="MenyooSP-${{ needs.check-version-and-merge.outputs.VERSION }}"
          echo "name=${ARTIFACT_NAME}" >> $GITHUB_OUTPUT
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Build solution
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            Solution/source/_Build/bin/Release/
            !Solution/source/_Build/bin/Release/Trash/
            !Solution/source/_Build/bin/Release/*.map
          retention-days: 5  # 设置产物保留天数

  release:
    needs: 
      - build
      - check-version-and-merge
    runs-on: windows-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.ARTIFACT_NAME }}  # 使用build作业的输出

      - name: Create release zip
        run: |
          $version = "${{ needs.check-version-and-merge.outputs.VERSION }}"
          $zipName = "MenyooSP-$version.zip"
          Compress-Archive -Path "Solution/source/_Build/bin/Release/*" -DestinationPath $zipName
          echo "ZIP_NAME=$zipName" >> $GITHUB_ENV

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-version-and-merge.outputs.VERSION }}
          name: "MenyooSP ${{ needs.check-version-and-merge.outputs.VERSION }}"
          body: "Automated release"
          files: ${{ env.ZIP_NAME }}
          prerelease: ${{ contains(needs.check-version-and-merge.outputs.VERSION, 'a') || contains(needs.check-version-and-merge.outputs.VERSION, 'b') || contains(needs.check-version-and-merge.outputs.VERSION, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}