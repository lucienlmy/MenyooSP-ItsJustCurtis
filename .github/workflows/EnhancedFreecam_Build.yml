name: EnhancedFreecam_Build

on:
  push:
    branches: [ "EnhancedFreecam-joy" ]

env:
  SOLUTION_FILE_PATH: ./Solution/Menyoo.sln
  BUILD_CONFIGURATION: Release
  CANCELJOB: false

permissions:
  contents: write
  pull-requests: write

jobs:
  check-version-and-merge:
    runs-on: ubuntu-latest
    outputs:
      CANCELJOB: ${{ steps.set_output.outputs.CANCELJOB }}

    steps:
      - name: Checkout repository
        if: env.CANCELJOB != 'true'
        uses: actions/checkout@v3

      - name: Calculate Version with Commit Count
        id: calculate_version
        if: env.CANCELJOB != 'true'
        shell: bash
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          BASE_VERSION=$(grep '#define MENYOO_CURRENT_VER_' Solution/source/macros.h | awk '{print $3}' | tr -d '"')
          VERSION="v${BASE_VERSION}.${COMMIT_COUNT}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Generated version: $VERSION"

      - name: Check if tag already exists and increment version
        if: env.CANCELJOB != 'true'
        shell: bash
        run: |
          BASE_VERSION=${{ env.VERSION }}
          COUNTER=0
          FINAL_VERSION=$BASE_VERSION

          while gh release view "$FINAL_VERSION" &>/dev/null; do
            COUNTER=$((COUNTER + 1))
            FINAL_VERSION="${BASE_VERSION}-${COUNTER}"
            echo "Version exists, trying: $FINAL_VERSION"
          done

          echo "Final Version: $FINAL_VERSION"
          echo "VERSION=$FINAL_VERSION" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check version pattern and merge
        id: check_version
        if: env.CANCELJOB != 'true'
        shell: bash
        run: |
          VERSION=${{ env.VERSION }}
          if [[ $GITHUB_REF == "refs/heads/main" ]]; then
            echo "Already on main branch. Skipping merge check."
            exit 0
          fi

          if [[ $VERSION =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Creating PR for release $VERSION"
            gh pr create --title "Release $VERSION" --body "Auto-merge for release" --base main --head EnhancedFreecam-joy
            echo "CANCELJOB=true" >> $GITHUB_ENV
          elif [[ ! $VERSION =~ ^v?[0-9]+\.[0-9]+\.[0-9]+(a|b|rc)[0-9]+$ ]]; then
            echo "Invalid version format. Cancelling workflow."
            echo "CANCELJOB=true" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set output
        id: set_output
        run: echo "CANCELJOB=${{ env.CANCELJOB }}" >> $GITHUB_OUTPUT

  build:
    if: github.ref == 'refs/heads/EnhancedFreecam-joy' && needs.check-version-and-merge.outputs.CANCELJOB != 'true'
    runs-on: windows-latest
    needs: check-version-and-merge

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build
        run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MenyooSP-${{ env.VERSION }}
          path: |
            Solution/source/_Build/bin/Release/
            !Solution/source/_Build/bin/Release/Trash/
            !Solution/source/_Build/bin/Release/*.map

  release:
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v4
        with:
          name: MenyooSP-${{ needs.check-version-and-merge.outputs.VERSION }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.check-version-and-merge.outputs.VERSION }}
          name: "MenyooSP ${{ needs.check-version-and-merge.outputs.VERSION }}"
          body: "Auto-generated release for EnhancedFreecam build"
          files: |
            Solution/source/_Build/bin/Release/*.dll
            Solution/source/_Build/bin/Release/*.asi
          fail_on_unmatched_tags: true  # 关键配置：禁止覆盖已有标签
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}